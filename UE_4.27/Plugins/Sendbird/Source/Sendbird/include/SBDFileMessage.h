// Copyright (c) 2021 Sendbird, Inc. All rights reserved.

#ifndef SENDBIRD_SBDFILEMESSAGE_H_
#define SENDBIRD_SBDFILEMESSAGE_H_

#include "SBDBaseMessage.h"

class SBDBaseChannel;
class FSBDThumbnail;
class FSBDFileMessage;

/**
 * SBDThumbnailSize
 */
class SBDThumbnailSize final {
public:
	SBDThumbnailSize(int64_t max_width, int64_t max_height);

	int64_t max_width;
	int64_t max_height;
};

/**
 * SBDThumbnail
 */
class SBDThumbnail final {
public:
	SBDThumbnail(int64_t max_width, int64_t max_height, int64_t real_width, int64_t real_height,
		const std::wstring& url, bool require_auth);

	/**
	 * Gets thumbnail's url.
	 */
	std::wstring GetUrl();

	int64_t max_width;
	int64_t max_height;
	int64_t real_width;
	int64_t real_height;

private:
	std::wstring url;
	bool require_auth;

	friend FSBDThumbnail;
};

/**
 * The `SBDFileMessage` class represents the file message which is generated by a user via [`SendFileMessage()`]() in `SBDBaseChannel`
 * or [Platform API](https://docs.sendbird.com/platform#messages_3_send). This class doesn't include a binary <span>data</span> for the file. It is just a URL.
 */
class SBDFileMessage final : public SBDBaseMessage {
public:
	/**
	 * The message sender.
	 */
	SBDUser sender;

	/**
	 * The file URL.
	 */
	std::wstring url;

	/**
	 * The name of file.
	 */
	std::wstring name;

	/**
	 * The size of file.
	 */
	uint64_t size;

	/**
	 * The type of file.
	 */
	std::wstring type;

	/**
	 * The custom data for file.
	 */
	std::wstring data;

	/**
	 * Request ID for ACK.
	 */
	std::wstring request_id;

	/**
	 * Custom message type.
	 */
	std::wstring custom_type;

	/**
	 * Image thumbnails.
	 */
	std::vector<SBDThumbnail> thumbnails;

	/**
	 * Returns sender of the <span>message</span>.
	 */
	SBDUser& GetSender();

private:
	bool require_auth;

	SBDFileMessage(const std::string& dict);
	void SetSender(const SBDUser& sender);
	void Overwrite(SBDFileMessage* message);

	friend FSBDFileMessage;
};

#endif /* SENDBIRD_SBDFILEMESSAGE_H_ */
